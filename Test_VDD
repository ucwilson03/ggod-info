This is actually GitHub instructions and not related to a VDD

Creating Teams - This is done once team members have a GitHub userID and access to the VA organization
Prior to configuring the repository setting it is necessary to create the teams and their membership.
1.	Navigate to your organization’s landing page for EPMO it is https://github.ec.va.gov/EPMO or https://github.com/department-of-veterans-affairs
2.	Select the Team tab
 
3.	GitHub opens the New Team wizard
4.	Following the standard naming convention enter the team name
5.	Enter a brief description
6.	Select Visible
7.	Select Create team
 
8.	Git Hub verifies the teams creation, the user can then add a new member by selecting the plus ( + ) in the left pane

** Additional changes will be made **
There are different ways people learn - Some learn by reading, some by doing or hands on with a new tool for example
**
Build Information 
This section contains general CCRS build information that results from the CCRS build process. Builds are done continuously with Jenkins. Jenkins uses source from Git to build whenever changes are made to the Git repository. Artifacts from these builds are made available through the Jenkins interface. Database Schema updates are propagated to the VA CCRS Databases through Flyway, a version control for SQL databases. Release candidate binaries, ETL code, Schema updates, and Interfaces code are packaged together for promotion through the target environments
**
You will see – ‘Fetching project area information’ as it begins to pull up the following screen
Select the Project Areas you want to connect to.

The following are recommended VA Git repository types. Further repository customizations may be needed based upon team and/or product need.      

| Team or Product | Example(s) |  Repository Type(s)    | Notes |
|:--------------|:-------------|:--------------------------------------------------------------------|:-----------------|
|VA Service Team| ⦁ EPMO CMD Offic<br> ⦁ EPMO CMD|⦁ product repository| Service teams tend to source control documentation artifacts only. |
|VA Product| ⦁ BIO BIS <br>⦁ EPRS<br>⦁ VDIF|⦁ product repository<br>⦁ code-project repository | VA products tend to source control both documentation and code artifacts. These repositories are based on code base and architecture. |
|VA Infrastructure-only Product| ⦁ VA WiFi Lifecycle Refresh<br>⦁ Enterprise Endpoint Security|⦁ product repository<br>⦁ code-project repository| VA Infrastructure products can source control both documentation artifacts and Infrastructure-specific artifacts based on what is being delivered |
|Other|  |⦁ product repository<br>⦁ code-project repository | Repository types determined based on code base and architecture |

**Note:** Git repositories function similarly to Rational components in that they house source artifact files and folders. However, base-lining will work differently in VA Git repositories.
